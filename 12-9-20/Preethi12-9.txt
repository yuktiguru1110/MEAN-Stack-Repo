show databases
db
use testdata
db
show tables
show collections
use preethi
db.preethiCollection.find({})

db.preethiCollection.insert({"regNo":1004,"name" : "Shriya", "course" : "javascript", "fee" : 9000})
show collections
show tables
db.Registration.find()
db.Registration.update({
    "course" : "MEAN"
},
{
    $set: {"course" : "MERN"}
},
{
    multi:true
} 
)

db.Registration.insertOne({"uid" : 1004.0, 
    "name" : "priya", 
    "course" : "json", 
    "fee" : "4000"})
 db.Registration.find()
 db.Registration.insertMany([{"uid" : 1005.0, 
    "name" : "neha", 
    "course" : "mysql", 
    "fee" : "6000"},
    {"uid" : 1006.0, 
    "name" : "krish", 
    "course" : "json", 
    "fee" : "4000"},
    {"uid" : 1007.0, 
    "name" : "shri", 
    "course" : "c#", 
    "fee" : "8000"}])
    
  db.Registration.find().pretty()
  
  db.Registration.find({"name" : "preethi"})
  db.Registration.find({"course" : "json"})
  db.Profile.find()
  db.Profile.insertMany([{"uid" : 102.0, 
    "name" : "jessie", 
    "designation" : "developer", 
    "location" : "mumbai"},
    {"uid" : 103.0, 
    "name" : "Shriya", 
    "designation" : "executive", 
    "location" : "delhi"},
    {"uid" : 104.0, 
    "name" : "hasan", 
    "designation" : "manager", 
    "location" : "chennai"}])
   db.Profile.find({uid: {$lt : 103}})
   db.Registration.find()
   db.Registration.find({fee: {$gt : "4000"}})
   db.Registration.update({fee: "6000"}, {$set: {fee:"5000"}})
    db.Registration.remove({uid: 1007})
    db.mytable.drop()
    db.Registration.find({$and: [{"course" : "json"}, {"name":"krish"}]})
    db.Registration.find({$and: [{"uid": {$gt:1003,$lt:1006}},{"course":"mysql"}]})
    db.Registration.aggregate([{$group: {_id : null,count: {$sum:1}}}])
     db.Registration.aggregate([{$group: {_id :"course",result: {$sum:1}}}])
    db.createCollection("employee",{capped:true,size:2,max:2})
    db.employee.find()
    db.employee.insert({"empid":1,"empName":"zara","location":"chennai","salary":5000,"position":"hr"})
    db.Profile.find()
    db.Profile.find({location:{$in:["mumbai","chennai"]}}).sort({Name:1})
    db.Registration.find({"name":"preethi"},{"name":1,"C_PROD":1}).pretty()
    db.Registration.aggregate([{$match:{uid:1003}},{$group:{_id: {data:"$uid", c_prod:"$C_PROD"},count:{$sum:1}}}],{ allowDiskUse:true })
    db.Registration.distinct("name")


Restaurant Assignment:
use restaurants
db.restaurants.insert({
  "address": {
     "building": "1007",
     "coord": [ -73.856077, 40.848447 ],
     "street": "Morris Park Ave",
     "zipcode": "10462"
  },
  "borough": "Bronx",
  "cuisine": "Bakery",
  "grades": [
     { "date": { "$date": 1393804800000 }, "grade": "A", "score": 2 },
     { "date": { "$date": 1378857600000 }, "grade": "A", "score": 6 },
     { "date": { "$date": 1358985600000 }, "grade": "A", "score": 10 },
     { "date": { "$date": 1322006400000 }, "grade": "A", "score": 9 },
     { "date": { "$date": 1299715200000 }, "grade": "B", "score": 14 }
  ],
  "name": "Morris Park Bake Shop",
  "restaurant_id": "30075445"
})
db.restaurants.insert({
  "address": {
     "building": "1008",
     "coord": [ -73.856077, 40.848447 ],
     "street": "4TH AVENUE",
     "zipcode": "10463"
  },
  "borough": "Brooklyn",
  "cuisine": "american",
  "grades": [
     { "date": { "$date": 1393804800000 }, "grade": "A", "score": 91 },
     { "date": { "$date": 1378857600000 }, "grade": "A", "score": 95 },
     { "date": { "$date": 1358985600000 }, "grade": "A", "score": 100 },
     { "date": { "$date": 1322006400000 }, "grade": "B", "score": 92 },
     { "date": { "$date": 1299715200000 }, "grade": "B", "score": 94 }
  ],
  "name": "choclate factory",
  "restaurant_id": "30075443"
})
db.restaurants.find()
db.restaurants.find({},{"restaurant_id" : 1,"name":1,"borough":1,"cuisine" :1})
db.restaurants.find({},{"restaurant_id" : 1,"name":1,"borough":1,"address.zipcode" :1})
db.restaurants.find({"borough" : "Bronx"})
db.restaurants.find({"borough": "Bronx"}).limit(5);
db.restaurants.find({"borough": "Bronx"}).skip(5).limit(5);
db.restaurants.find({"grades.score":{$gt:80,$lt:100}})
db.restaurants.find({"address.coord":{$lt:-95.754168}})
db.restaurants.find(
               {$and:
                    [
                       {"cuisine" : {$ne :"American "}},
                       {"grades.score" : {$gt : 70}},
                       {"address.coord" : {$lt : -65.754168}}
                    ]
                }
                    );
db.restaurants.find(
                           {
                             "cuisine" : {$ne : "American "},
                             "grades.grade" :"A",
                             "borough" : {$ne : "Brooklyn"}
                            }
                     ).sort({"cuisine":-1});

db.restaurants.find(
{name: /^Wil/},
{
"restaurant_id" : 1,
"name":1,
"borough":1,
"cuisine" :1
}
);
db.restaurants.find(
{name: /cse$/},
{
"restaurant_id" : 1,
"name":1,
"borough":1,
"cuisine" :1
}
);