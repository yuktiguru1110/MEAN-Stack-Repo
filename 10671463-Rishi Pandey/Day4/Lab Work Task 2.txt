Lab Work Task 2


1.Write a MongoDB query to find the restaurant Id, name, borough and
cuisine for those restaurants which contain 'Reg' as three letters somewhere
in its name.

solu -db.RestaurantDetails.find({"name":/.*Reg.*/},{"restaurant_id":1,"name":1,"borough":1,"cuisine":1})



2. Write a MongoDB query to find the restaurants which belong to the
borough Bronx and prepared either American or Chinese dish.

solu- db.RestaurantDetails.find({"borough":"Bronx"},{$or:[{"cuisine":"American"},{"cuisine":"Chinese"}]})



3. Write a MongoDB query to find the restaurant Id, name, borough and
cuisine for those restaurants which belong to the borough Staten Island or
Queens or Bronxor Brooklyn.


solu - db.RestaurantDetails.find({$or:[{"borough":"Staten Island","borough":"Queens","borough":"Bronxor Brooklhyn"}]},{"restaurant_id":1,"name":1,"borough":1,"cuisine":1})

                                                                  or

solu - db.RestaurantDetails.find({"borough":{$in:["Staten Island","Queens","Bronxor Brooklhyn"]}},{"restaurant_id":1,"name":1,"borough":1,"cuisine":1})


4. Write a MongoDB query to find the restaurant Id, name, borough and
cuisine for those restaurants which are not belonging to the borough Staten
Island or Queens or Bronxor Brooklyn.

solu- db.RestaurantDetails.find({$or:[{"borough":{$ne:"Staten Island"},"borough":{$ne:"Queens"},"borough":{$ne:"Bronxor Brooklhyn"}}]}, {"restaurant_id":1,"name":1,"borough":1,"cuisine":1})

                                                                   or

solu- db.RestaurantDetails.find({"borough":{$nin:["Staten Island","Queens","Bronxor Brooklhyn"]}}, {"restaurant_id":1,"name":1,"borough":1,"cuisine":1})




5.Write a MongoDB query to find the restaurant Id, name, borough and
cuisine for those restaurants which achieved a score which is not more than 10

solu-db.RestaurantDetails.find({"grades":{$elemMatch:{"score":{$lte:10}}}},{"restaurant_id":1,"name":1,"borough":1,"cuisine":1})



6. Write a MongoDB query to find the restaurant Id, name, borough and cuisine
for those restaurants which prepared dish except American and Chinees or
restaurants name begins with letter Wil.

solu - db.RestaurantDetails.find({$or:[{$and:[{"cuisine":{$ne:"American"}},{"cuisine":{$ne:"Chinese"}}]},{"name":/^Wil/}]})


7.. Write a MongoDB query to find the restaurant Id, name, and grades for
those restaurants which achieved a grade of &quot;A&quot; and scored 11 on an ISODate
&quot;2014-08-11T00:00:00Z&quot; among many of survey dates.. 

solu- db.restaurants.find({"grades.date": ISODate("2014-03-03T00:00:00Z"), "grades.grade":"A" , "grades.score" : 11}, {restaurant_id:1,name:1,grades:1})


8. Write a MongoDB query to find the restaurant Id, name and grades for those
restaurants where the 2nd element of grades array contains a grade of &quot;A&quot; and
score 9 on an ISODate &quot;2014-08-11T00:00:00Z

solu- db.restaurants.find({"grades.date": ISODate("2014-03-03T00:00:00Z"), "grades.grade":"A" , "grades.score" : 9}, {restaurant_id:1,name:1,grades:1})


9. Write a MongoDB query to find the restaurant Id, name, address and
geographical location for those restaurants where 2nd element of coord array
contains a value which is more than 42 and upto 52

solu-db.restaurants.find({"address.coord.1": {$gt : 42, $lte : 52}},{"restaurant_id" : 1,"name":1,"address":1,"coord":1})



10. Write a MongoDB query to arrange the name of the restaurants in ascending
order along with all the columns
solu-db.RestaurantDetails.find().sort({"name":1})









